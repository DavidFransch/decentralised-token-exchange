import React, {Component} from 'react';
import './App.css';
import {connect} from 'react-redux'
import Navbar from './Navbar'
import Content from './Content'
import {
loadWeb3, 
loadAccount, 
loadToken, 
loadExchange
} from '../store/interactions'
import { contractsLoadedSelector } from '../store/selectors'

//import { tokenLoadedSelector } from '../store/selectors'
//import { exchangeLoadedSelector } from '../store/selectors'
//import {accountSelector}  from '../store/selectors'

class App extends Component {
  componentWillMount(){
    this.loadBlockchainData(this.props.dispatch)
  }

  async loadBlockchainData(dispatch) {
    const web3 = loadWeb3(dispatch)
    await web3.eth.net.getNetworkType()
    const networkId = await web3.eth.net.getId()
    await loadAccount(web3, dispatch)
    loadToken(web3, networkId, dispatch)
    loadExchange(web3, networkId, dispatch)
  }
  
  render() {
    //console.log("LOADED?", this.props.contractsLoaded)
    return (
      <div>
        <Navbar/>
        <Content/>
      </div>
    );
  }
}

//Access to state
function mapStateToProps(state){
  //console.log("token LOADED?", tokenLoadedSelector(state)) -- false
  //console.log("exchange LOADED?", exchangeLoadedSelector(state)) -- true
  console.log("contractsLoaded?", contractsLoadedSelector(state))
  return{
   //contractsLoaded: contractsLoadedSelector(state)
   //account: accountSelector(state)
  }
  
}

export default connect(mapStateToProps)(App);
